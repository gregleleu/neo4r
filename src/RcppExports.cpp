// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// pkg_load
IntegerVector pkg_load();
RcppExport SEXP _neo4r_pkg_load() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(pkg_load());
    return rcpp_result_gen;
END_RCPP
}
// db_connect
/* use NEO4J_INSECURE when connecting to disable TLS */ SEXP db_connect(SEXP rurl);
RcppExport SEXP _neo4r_db_connect(SEXP rurlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type rurl(rurlSEXP);
    rcpp_result_gen = Rcpp::wrap(db_connect(rurl));
    return rcpp_result_gen;
END_RCPP
}
// db_disconnect
/* use NEO4J_INSECURE when connecting to disable TLS */ IntegerVector db_disconnect(SEXP conn);
RcppExport SEXP _neo4r_db_disconnect(SEXP connSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type conn(connSEXP);
    rcpp_result_gen = Rcpp::wrap(db_disconnect(conn));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_neo4r_pkg_load", (DL_FUNC) &_neo4r_pkg_load, 0},
    {"_neo4r_db_connect", (DL_FUNC) &_neo4r_db_connect, 1},
    {"_neo4r_db_disconnect", (DL_FUNC) &_neo4r_db_disconnect, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_neo4r(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
